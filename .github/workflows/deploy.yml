name: Deploy Lambda

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy'
        required: true
        default: 'int'
        type: choice
        options:
          - int
          - prod

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      dir: ${{ steps.find-pom.outputs.dir }}
      repo: ${{ steps.get-repo-name.outputs.repo }}
    steps:
      - name: Set environment
        id: set-env
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          else
            echo "environment=int" >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@v4

      - name: Find working directory with pom.xml
        id: find-pom
        run: |
          echo "dir=$(dirname $(find . -name "pom.xml" | head -n 1))" >> $GITHUB_OUTPUT

      - name: Get repo name
        id: get-repo-name
        run: |
          echo "repo=$(basename "${{ github.repository }}")" >> $GITHUB_OUTPUT

      - name: Display env
        run: |
          echo "Selected environment: ${{ steps.set-env.outputs.environment }}"
          echo "pom.xml located in: ${{ steps.find-pom.outputs.dir }}"
          echo "Repository name: ${{ steps.get-repo-name.outputs.repo }}"

  deploy:
    needs: set-environment
    runs-on: ubuntu-latest
    environment: ${{ needs.set-environment.outputs.environment }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ needs.set-environment.outputs.dir }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build and Package with Maven
        run: mvn clean package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_INFRA_ADMIN_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_INFRA_ADMIN_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp /target/${{needs.set-environment.outputs.repo}}-1.0.jar s3://${{ vars.CODEBASE_BUCKET }}-${{ needs.set-environment.outputs.environment }}/${{needs.set-environment.outputs.repo}}-${{ needs.set-environment.outputs.environment }}.zip

      - name: Deploy to lambda
        id: deploy-lambda
        run: |
          # Update function code
          aws lambda update-function-code \
            --function-name ${{ github.repository }}-${{ needs.set-environment.outputs.environment }} \
            --s3-bucket ${{ vars.CODEBASE_BUCKET }}-${{ needs.set-environment.outputs.environment }} \
            --s3-key ${{needs.set-environment.outputs.repo}}-${{ needs.set-environment.outputs.environment }}.zip
